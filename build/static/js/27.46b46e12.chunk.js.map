{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/UndoOutlined.js","../node_modules/@ant-design/icons/es/icons/UndoOutlined.js","../node_modules/antd/es/row/index.js","pages/notary/components/Schedule.js","pages/notary/components/NotaryDialog.js","pages/notary/notary.page.js","helpers/alert/Alert.js","pages/user/components/UserDialog.js","components/table/DataTable.js","json/tutorial.pdf","components/layout/components/menu/DrawerMenu.js","components/layout/components/menu/DrawerMobile.js","components/layout/components/Header.js","components/layout/Layout.js","components/table/ActionTable.js"],"names":["UndoOutlined","props","ref","React","AntdIcon","_objectSpread","icon","UndoOutlinedSvg","RefIcon","Row","Schedule","_ref","form","setSchedules","schedules","disabled","setDisabled","useState","hours","columns","title","dataIndex","key","render","text","_jsx","children","record","ActionTable","handleDelete","deleteItem","showAlert","Alert","show","type","message","btnOk","fnOk","btnCancel","item","newArr","i","length","days","startHour","endHour","splice","_jsxs","_Fragment","Form","Item","label","name","valuePropName","id","Checkbox","onChange","handleChange","getFieldValue","rules","required","hasFeedback","Select","placeholder","allowClear","map","hour","value","Button","onClick","saveSchedule","schedule","Object","schedulesAux","push","data","lunes","martes","miercoles","jueves","viernes","sabado","undefined","setFieldsValue","className","DataTable","NotaryDialog","Notary","listNotaries","setListNotaries","notary","setNotary","handleEdit","handleEditNotary","alertShow","history","_id","deleteNotary","fnCancel","async","HttpClient","delete","status","getNotaries","response","get","useEffect","Layout","alert","confirmAlert","closeOnClickOutside","customUI","onClose","UserDialog","user","setData","callback","useForm","files","setFiles","handleOk","formData","FormData","append","originFileObj","JSON","stringify","first_name","last_name","email","password","role","url_image","put","then","res","post","handleCancel","resetFields","urlFile","uid","url","thumbUrl","Modal","visible","onOk","onCancel","forceRender","maskClosable","footer","layout","min","Input","ImgCrop","rotate","aspect","modalTitle","Upload","listType","fileList","defaultFileList","file","Table","dataSource","Cookies","SubMenu","Menu","DrawerMenu","useHistory","useContext","AuthContext","src","mode","defaultSelectedKeys","location","pathname","defaultOpenKeys","split","style","height","borderRight","AppstoreOutlined","SolutionOutlined","BankOutlined","ExceptionOutlined","href","Pdf","target","GlobalOutlined","QuestionOutlined","TeamOutlined","WechatOutlined","SettingOutlined","NotificationOutlined","WhatsAppOutlined","DrawerMobile","openDrawer","setOpenDrawer","Drawer","placement","closable","cookies","Header","userDialog","setUserDialog","callbackUser","remove","window","loader","Loader","Space","size","EditOutlined","DeleteOutlined"],"mappings":"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","file":"static/js/27.46b46e12.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar UndoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M511.4 124C290.5 124.3 112 303 112 523.9c0 128 60.2 242 153.8 315.2l-37.5 48c-4.1 5.3-.3 13 6.3 12.9l167-.8c5.2 0 9-4.9 7.7-9.9L369.8 727a8 8 0 00-14.1-3L315 776.1c-10.2-8-20-16.7-29.3-26a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-7.5 7.5-15.3 14.5-23.4 21.2a7.93 7.93 0 00-1.2 11.1l39.4 50.5c2.8 3.5 7.9 4.1 11.4 1.3C854.5 760.8 912 649.1 912 523.9c0-221.1-179.4-400.2-400.6-399.9z\" } }] }, \"name\": \"undo\", \"theme\": \"outlined\" };\nexport default UndoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UndoOutlinedSvg from \"@ant-design/icons-svg/es/asn/UndoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UndoOutlined = function UndoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UndoOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(UndoOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'UndoOutlined';\n}\nexport default RefIcon;","import { Row } from '../grid';\nexport default Row;","import React, { useState } from 'react'\r\nimport { Checkbox, Row, Form, Select, Button } from 'antd'\r\nimport ActionTable from '../../../components/table/ActionTable';\r\nimport DataTable from '../../../components/table/DataTable';\r\nimport Alert from '../../../helpers/alert/Alert'\r\n\r\nconst Schedule = ({ form, setSchedules, schedules }) => {\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const hours = [\"6:00\", , \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\",\r\n        \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\",\r\n        \"18:00\", \"19:00\", \"20:00\"];\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Días',\r\n            dataIndex: 'days',\r\n            key: 'days',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Hora Inicio',\r\n            dataIndex: 'startHour',\r\n            key: 'startHour',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Hora Fin',\r\n            dataIndex: 'endHour',\r\n            key: 'endHour',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Acción',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <ActionTable\r\n                    handleDelete={() => deleteItem(record)}\r\n                />\r\n            ),\r\n        }\r\n    ];\r\n\r\n    const saveSchedule = () => {\r\n        if (!form.getFieldValue('lunes') && !form.getFieldValue('martes')\r\n            && !form.getFieldValue('miercoles') && !form.getFieldValue('jueves')\r\n            && !form.getFieldValue('viernes') && !form.getFieldValue('sabado')\r\n            && !form.getFieldValue('lunes_viernes')) {\r\n            showAlert();\r\n        } else if (!form.getFieldValue('startHour') || !form.getFieldValue('endHour')) {\r\n            showAlert();\r\n        } else {\r\n            var schedule = new Object();\r\n            var days = \"\";\r\n            var hours = {};\r\n            if (form.getFieldValue('lunes_viernes'))\r\n                days += 'lunes-martes-miercoles-jueves-viernes-sabado'\r\n            else {\r\n                if (form.getFieldValue('lunes'))\r\n                    days += 'lunes-';\r\n                if (form.getFieldValue('martes'))\r\n                    days += 'martes-';\r\n                if (form.getFieldValue('miercoles'))\r\n                    days += 'miercoles-';\r\n                if (form.getFieldValue('jueves'))\r\n                    days += 'jueves-'\r\n                if (form.getFieldValue('viernes'))\r\n                    days += 'viernes-'\r\n            }\r\n            if (form.getFieldValue('sabado'))\r\n                days += 'sabado'\r\n\r\n            hours.startHour = form.getFieldValue('startHour');\r\n            hours.endHour = form.getFieldValue('endHour');\r\n\r\n            schedule.days = days;\r\n            schedule.startHour = form.getFieldValue('startHour');\r\n            schedule.endHour = form.getFieldValue('endHour');\r\n\r\n            var schedulesAux = [...schedules];\r\n            schedulesAux.push(schedule);\r\n            setSchedules(schedulesAux);\r\n\r\n            let data = {\r\n                lunes: false,\r\n                martes: false,\r\n                miercoles: false,\r\n                jueves: false,\r\n                viernes: false,\r\n                sabado: false,\r\n                startHour: undefined,\r\n                endHour: undefined\r\n            }\r\n            form.setFieldsValue(data);\r\n        }\r\n    }\r\n\r\n    const showAlert = () => {\r\n        Alert.show({\r\n            type: \"error\",\r\n            title: \"Error\",\r\n            message: \"Hay campos necesarios que no se han diligenciado.\",\r\n            btnOk: \"Aceptar\",\r\n            fnOk: () => { },\r\n            btnCancel: \"Cancelar\"\r\n        })\r\n    }\r\n\r\n    const deleteItem = (item) => {\r\n        let newArr = [...schedules];\r\n        for (let i = 0; i < newArr.length; i++) {\r\n            if (newArr[i].days === item.days && newArr[i].startHour === item.startHour\r\n                && newArr[i].endHour === item.endHour) {\r\n                newArr.splice(i, 1);\r\n                setSchedules(newArr);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = () => {\r\n        if (form.getFieldValue(\"lunes_viernes\")) {\r\n            setDisabled(true);\r\n        }else{\r\n            setDisabled(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Form.Item\r\n                    label=\"Horario:\"\r\n                    name=\"lunes\"\r\n                    valuePropName=\"checked\"\r\n                    id=\"lunes\"\r\n                >\r\n                    <Row>\r\n                        <Form.Item\r\n                            name=\"lunes\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"lunes\"\r\n                        >\r\n                            <Checkbox disabled={disabled}>Lunes</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"martes\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"martes\"\r\n                        >\r\n                            <Checkbox disabled={disabled}>Martes</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"miercoles\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"miercoles\"\r\n                        >\r\n                            <Checkbox disabled={disabled}>Miércoles</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"jueves\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"jueves\"\r\n                        >\r\n                            <Checkbox disabled={disabled}>Jueves</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"viernes\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"viernes\"\r\n                        >\r\n                            <Checkbox disabled={disabled}>Viernes</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"sabado\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"sabado\"\r\n                        >\r\n                            <Checkbox>Sábado</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"lunes_viernes\"\r\n                            valuePropName=\"checked\"\r\n                            id=\"lunes_viernes\"\r\n                        >\r\n                            <Checkbox onChange={handleChange}>Lunes-Viernes</Checkbox>\r\n                        </Form.Item>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                name=\"startHour\"\r\n                                id=\"startHour\"\r\n                                label=\"Hora inicio\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"La hora de inicio es requerida\"\r\n                                    },\r\n                                ]}\r\n                                hasFeedback>\r\n                                <Select\r\n                                    placeholder=\"Hora inicio\"\r\n                                    //onChange={handleChangeProvince}\r\n                                    allowClear\r\n                                >\r\n                                    {hours.map((hour, i) => (\r\n                                        <option key={i} value={hour}>{hour}</option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Form.Item>\r\n                            <Form.Item\r\n                                name=\"endHour\"\r\n                                id=\"endHour\"\r\n                                label=\"Hora fin\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"La hora fin es requerida\"\r\n                                    },\r\n                                ]}\r\n                                hasFeedback>\r\n                                <Select\r\n                                    placeholder=\"Hora fin\"\r\n                                    //onChange={handleChangeProvince}\r\n                                    allowClear\r\n                                >\r\n                                    {hours.map((hour, i) => (\r\n                                        <option key={i} value={hour}>{hour}</option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Button\r\n                            onClick={() => saveSchedule()}\r\n                        >\r\n                            Guardar Horario\r\n                        </Button>\r\n                    </Row>\r\n                </Form.Item>\r\n            </Row>\r\n\r\n\r\n            <div className=\"main-card-table\">\r\n                <DataTable columns={columns} data={schedules} />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Schedule\r\n","import React, { useState, useEffect } from 'react'\r\nimport { InputNumber, Modal, Form, Input, Button, Select, Row, Checkbox } from 'antd';\r\n\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\n\r\n// RESOURCE\r\nimport json_location from '../../../json/states-cities.json';\r\n//COMPONENTS\r\nimport Schedule from './Schedule';\r\nimport Alert from '../../../helpers/alert/Alert';\r\n\r\nconst NotaryDialog = ({ notary, data, setData, callback }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [cities, setCities] = useState([]);\r\n    const [schedules, setSchedules] = useState([]);\r\n    const { TextArea } = Input;\r\n\r\n    const handleOk = () => {\r\n        if (schedules.length > 0) {\r\n            if (form.getFieldValue('name') !== undefined &&form.getFieldValue('name') !== '' &&\r\n                form.getFieldValue('contact') !== '' && form.getFieldValue('contact') !== undefined &&\r\n                form.getFieldValue('address') !== '' && form.getFieldValue('address') !== undefined &&\r\n                form.getFieldValue('email') !== '' && form.getFieldValue('email') !== undefined &&\r\n                form.getFieldValue('phone') !== '' && form.getFieldValue('phone') !== undefined &&\r\n                form.getFieldValue('province') !== '' && form.getFieldValue('province') !== undefined &&\r\n                form.getFieldValue('city') !== '' && form.getFieldValue('city') !== undefined &&\r\n                form.getFieldValue('sector') !== '' && form.getFieldValue('sector') !== undefined) {\r\n\r\n                let schedule = new Object();\r\n                schedule = { schedules };\r\n                if (notary) {\r\n\r\n                    HttpClient.put('/api/notary/' + notary._id, {\r\n                        name: form.getFieldValue('name'),\r\n                        contact: form.getFieldValue('contact'),\r\n                        address: form.getFieldValue('address'),\r\n                        email: form.getFieldValue('email'),\r\n                        phone: form.getFieldValue('phone'),\r\n                        country: 'Ecuador',\r\n                        province: form.getFieldValue('province'),\r\n                        city: form.getFieldValue('city'),\r\n                        sector: form.getFieldValue('sector'),\r\n                        schedule: schedule\r\n                    })\r\n                        .then((res) => {\r\n                            setData(null);\r\n                            callback();\r\n                        })\r\n\r\n                } else {\r\n\r\n                    HttpClient.post('/api/notary', {\r\n                        name: form.getFieldValue('name'),\r\n                        contact: form.getFieldValue('contact'),\r\n                        address: form.getFieldValue('address'),\r\n                        email: form.getFieldValue('email'),\r\n                        phone: form.getFieldValue('phone'),\r\n                        country: 'Ecuador',\r\n                        province: form.getFieldValue('province'),\r\n                        city: form.getFieldValue('city'),\r\n                        sector: form.getFieldValue('sector'),\r\n                        schedule: schedule\r\n                    })\r\n                        .then((res) => {\r\n                            setData(null);\r\n                            callback();\r\n                        })\r\n\r\n                }\r\n            } else {\r\n                Alert.show({\r\n                    type: \"error\",\r\n                    title: \"Error\",\r\n                    message: \"Hay campos obligatorios que no han sido diligenciados.\",\r\n                    btnOk: \"Aceptar\",\r\n                    fnOk: () => { },\r\n                    btnCancel: \"Cancelar\"\r\n                })\r\n            }\r\n\r\n        } else {\r\n            Alert.show({\r\n                type: \"error\",\r\n                title: \"Error\",\r\n                message: \"El horario es obligatorio.\",\r\n                btnOk: \"Aceptar\",\r\n                fnOk: () => { },\r\n                btnCancel: \"Cancelar\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleChangeProvince = (value) => {\r\n\r\n        const state = json_location.find(x => x.state == value);\r\n        setCities(state.cities)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setData(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        form.resetFields();\r\n        if (notary) {\r\n            let data = {\r\n                name: notary.name,\r\n                contact: notary.contact,\r\n                address: notary.address,\r\n                email: notary.email,\r\n                phone: notary.phone,\r\n                province: notary.province,\r\n                city: notary.city,\r\n                sector: notary.sector\r\n            }\r\n            form.setFieldsValue(data);\r\n            setSchedules(notary.schedule.schedules);\r\n            handleChangeProvince(data.province)\r\n        } else {\r\n            setSchedules([])\r\n        }\r\n\r\n    }, [notary, data])\r\n\r\n    return (\r\n        <Modal\r\n            visible={data}\r\n            title=\"Información de la notaria\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            forceRender\r\n            maskClosable={false}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>,\r\n                <Button\r\n                    key=\"submit\"\r\n                    type=\"primary\"\r\n                    // loading={loading}\r\n                    onClick={handleOk}>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n                form={form} >\r\n\r\n                <Form.Item\r\n                    label=\"Nombre\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese el nombre!',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: 'El nombre debe tener al menos 4 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Contacto\"\r\n                    name=\"contact\"\r\n                    id=\"contact\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese el contacto!',\r\n                        },\r\n                        {\r\n                            min: 5,\r\n                            message: 'El contacto debe tener al menos 5 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Dirección\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese la dirección!',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: 'La dirección debe tener al menos 4 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Correo\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            type: \"email\",\r\n                            message: 'El valor ingresado no es un correo eléctronico!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Teléfono\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese el número teléfono!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"province\"\r\n                    id=\"province\"\r\n                    label=\"Provincia\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Seleccione una provincia\"\r\n                        onChange={handleChangeProvince}\r\n                        allowClear\r\n                    >\r\n                        {json_location.map((province, i) => (\r\n                            <option key={i} value={province.state}>{province.state}</option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    label=\"Ciudad\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Seleccione una ciudad\"\r\n                        allowClear\r\n                    >\r\n                        {cities.map((city, i) => (\r\n                            <option key={i} value={city}>{city}</option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"sector\"\r\n                    id=\"sector\"\r\n                    label=\"sector\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Seleccione un sector\"\r\n                        allowClear\r\n                    >\r\n                        <option value=\"NORTE\">NORTE</option>\r\n                        <option value=\"CENTRO\">CENTRO</option>\r\n                        <option value=\"SUR\">SUR</option>\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Schedule\r\n                    form={form}\r\n                    setSchedules={setSchedules}\r\n                    schedules={schedules}\r\n                />\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NotaryDialog","import React, { useEffect, useState } from 'react'\r\nimport { Button, Space } from 'antd'\r\n\r\nimport HttpClient from '../../helpers/network/HttpClient'\r\n\r\n// COMPONENTS\r\nimport Layout from '../../components/layout/Layout'\r\nimport DataTable from '../../components/table/DataTable'\r\nimport ActionTable from '../../components/table/ActionTable'\r\nimport NotaryDialog from './components/NotaryDialog'\r\nimport Alert from '../../helpers/alert/Alert'\r\n\r\n\r\n// ICON\r\nimport {\r\n    UndoOutlined\r\n} from '@ant-design/icons'\r\n\r\nconst Notary = (props) => {\r\n    const [listNotaries, setListNotaries] = useState([]);\r\n    //const [notaryDialog, setNotaryDialog] = useState();\r\n    const [notary, setNotary] = useState();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nombre',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Contacto',\r\n            dataIndex: 'contact',\r\n            key: 'contact',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Dirección',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Teléfono',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Acción',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            //render: text => <a>{text}</a>,\r\n            render: (text, record) => (\r\n                <ActionTable \r\n                    handleEdit={ () => handleEditNotary(record) }\r\n                    handleDelete={ () => alertShow(record) }\r\n                />\r\n            ),\r\n        }\r\n    ];\r\n\r\n    const handleNewNotary = () => {\r\n        //setNotary(null);\r\n        //setNotaryDialog({});\r\n        props.history.push(\"/notarycrud\")\r\n    }\r\n\r\n    const handleEditNotary = (notary) => {\r\n        /*setNotary(notary);\r\n        setNotaryDialog({notary});*/\r\n        props.history.push(\"/notarycrud?id=\" + notary._id)\r\n    }\r\n\r\n    const alertShow = (notary) => {\r\n        Alert.show({\r\n            type: \"warning\",\r\n            title: \"Confirmación\",\r\n            message: \"¿Seguro desea eliminar esta notaria?\",\r\n            btnOk: \"Aceptar\",\r\n            fnOk: () => { deleteNotary(notary) },\r\n            btnCancel: \"Cancelar\",\r\n            fnCancel: () => {  }\r\n        })\r\n    }\r\n\r\n    const deleteNotary = async (notary) => {\r\n        \r\n        const response = await HttpClient.delete('/api/notary/'+notary._id);\r\n        if (response.status == 200) {\r\n            getNotaries();\r\n        }\r\n    }\r\n\r\n    /*const callbackNotary = () => {\r\n        getNotaries();\r\n        setNotaryDialog(null);\r\n    }*/\r\n\r\n    const getNotaries = async () => {\r\n        const response = await HttpClient.get('/api/notary');\r\n        if (response.status == 200) {\r\n            setListNotaries(response.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotaries();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/*<NotaryDialog\r\n                notary={notary}\r\n                data={notaryDialog}\r\n                setData={setNotaryDialog}\r\n                callback={callbackNotary}\r\n            />*/}\r\n            <Layout>\r\n                <div className=\"header-page\">\r\n                    <h1>Notarias</h1>\r\n\r\n                    <div className=\"main-card card\">\r\n                        <div className=\"main-card-action\">\r\n                            <ul>\r\n                                <li>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        onClick={() => handleNewNotary()}\r\n                                    >\r\n                                        Crear Notaria\r\n                                    </Button>\r\n                                </li>\r\n                                <li>\r\n                                    <UndoOutlined />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"main-card-table\">\r\n                            <DataTable columns={columns} data={listNotaries} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Notary\r\n","import React from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'\r\n\r\nconst Alert = {\r\n    show(alert) {\r\n        confirmAlert({\r\n            closeOnClickOutside: false,\r\n            customUI: ({ onClose }) => {\r\n              return (\r\n                <div className=\"modal-alert\">\r\n                    <div className={\"modal-content \" + alert.type}>       \r\n                        <div className=\"content\">\r\n                            <div className=\"alert-content\">\r\n                                <p className=\"alert-title\">{alert.title}</p>\r\n                                <p className=\"alert-message\">{alert.message}</p>\r\n                            </div>\r\n                            <div className=\"alert-buttons\">\r\n                                <button type=\"submit\" className=\"btn-large\" onClick={() => (onClose(), alert.fnOk())}>{alert.btnOk}</button>\r\n                                { alert.fnCancel ? (\r\n                                    <button type=\"submit\" className=\"btn-large outline\" onClick={() => (onClose(),alert.fnCancel())}>{alert.btnCancel}</button>\r\n                                ) : null }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              );\r\n            }\r\n        }); \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport { InputNumber, Modal } from 'antd';\r\n\r\nimport HttpClient from '../../../helpers/network/HttpClient'\r\n\r\nimport { Form, Input, Button, Select, Upload } from 'antd'\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\nconst UserDialog = ({ user, data, setData, callback }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const onChange = (file) => {\r\n        setFiles(file.fileList);\r\n    };\r\n\r\n    const onPreview = async (file) => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n\r\n    const handleOk = () => {\r\n\r\n        const formData = new FormData();\r\n\r\n        if (user) {\r\n            if (files.length > 0)\r\n                formData.append(\"image\", files[0].originFileObj);\r\n\r\n            formData.append(\"user\", JSON.stringify({\r\n                first_name: form.getFieldValue('first_name'),\r\n                last_name: form.getFieldValue('last_name'),\r\n                email: form.getFieldValue('email'),\r\n                password: form.getFieldValue('password'),\r\n                role: form.getFieldValue('role'),\r\n                url_image: \"\"\r\n            }));\r\n\r\n\r\n            HttpClient.put('/api/user/' + (user._id ? user._id : user.id), formData)\r\n                .then((res) => {\r\n                    setData(null);\r\n                    callback(user._id ? user._id : user.id);\r\n                })\r\n\r\n        } else {\r\n\r\n            if (files.length > 0)\r\n                formData.append(\"image\", files[0].originFileObj);\r\n\r\n            formData.append(\"user\", JSON.stringify({\r\n                first_name: form.getFieldValue('first_name'),\r\n                last_name: form.getFieldValue('last_name'),\r\n                email: form.getFieldValue('email'),\r\n                password: form.getFieldValue('password'),\r\n                role: form.getFieldValue('role'),\r\n                url_image: \"\"\r\n            }));\r\n\r\n            HttpClient.post('/api/user', formData)\r\n                .then((res) => {\r\n                    setData(null);\r\n                    callback();\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setData(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        form.resetFields();\r\n        if (user) {\r\n            let data = {\r\n                first_name: user.first_name,\r\n                last_name: user.last_name,\r\n                password: user.password,\r\n                email: user.email,\r\n                role: user.role\r\n            }\r\n            form.setFieldsValue(data);\r\n            if (user.url_image) {\r\n\r\n                let urlFile = user.url_image;\r\n                setFiles(\r\n                    [{\r\n                        uid: '-1',\r\n                        name: 'load.png',\r\n                        status: 'done',\r\n                        url: urlFile,\r\n                        thumbUrl: urlFile,\r\n                    }]\r\n                )\r\n\r\n            }\r\n        } else {\r\n            setFiles([]);\r\n        }\r\n\r\n    }, [user, data])\r\n\r\n    return (\r\n        <Modal\r\n            visible={data}\r\n            title=\"Información del usuario\"\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            forceRender\r\n            maskClosable={false}\r\n            footer={[\r\n                <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancelar\r\n                </Button>,\r\n                <Button\r\n                    key=\"submit\"\r\n                    type=\"primary\"\r\n                    onClick={handleOk}>\r\n                    Guardar\r\n                </Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                layout=\"vertical\"\r\n                form={form} >\r\n\r\n                <Form.Item\r\n                    label=\"Nombre(s)\"\r\n                    name=\"first_name\"\r\n                    id=\"first_name\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese el (los) nombre(s)!',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: 'El (Los) nombre(s) debe(n) tener al menos 3 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Apellidos\"\r\n                    name=\"last_name\"\r\n                    id=\"last_name\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese los apellidos!',\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: 'Los apellidos deben tener al menos 4 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Correo\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            type: \"email\",\r\n                            message: 'El valor ingresado no es un correo eléctronico!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Contraseña\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Por favor ingrese la contraseña!',\r\n                        },\r\n                        {\r\n                            min: 8,\r\n                            message: 'La contraseña debe tener al menos 8 caracteres!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input type=\"password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"role\"\r\n                    id=\"role\"\r\n                    label=\"Rol\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Seleccione un rol\"\r\n                        allowClear\r\n                    >\r\n                        <option value=\"ADMINISTRADOR\">ADMINISTRADOR</option>\r\n                        <option value=\"ASESOR LEGAL\">ASESOR LEGAL</option>\r\n                        <option value=\"CALL CENTER\">CALL CENTER</option>\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <ImgCrop\r\n                    rotate={false}\r\n                    aspect={50 / 50}\r\n                    modalTitle={\"Editar Imagen\"}>\r\n                    <Upload\r\n                        listType=\"picture-card\"\r\n                        fileList={files}\r\n                        defaultFileList={[...files]}\r\n                        onChange={onChange}\r\n                    >\r\n                        {files.length == 0 && '+ Upload'}\r\n                    </Upload>\r\n                </ImgCrop>\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UserDialog","import React from 'react'\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\n\r\nconst DataTable = ({ columns, data }) => {\r\n    return (\r\n        <Table columns={columns} dataSource={data} />\r\n    )\r\n}\r\n\r\nexport default DataTable;\r\n","export default __webpack_public_path__ + \"static/media/tutorial.5db87431.pdf\";","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// CONTEXT \r\nimport AuthContext from '../../../../context/AuthContext';\r\n\r\nimport { Menu } from 'antd'\r\nimport Pdf from '../../../../json/tutorial.pdf'\r\n\r\nimport {\r\n    BankOutlined,\r\n    GlobalOutlined,\r\n    TeamOutlined,\r\n    SolutionOutlined,\r\n    AppstoreOutlined,\r\n    ExceptionOutlined,\r\n    WhatsAppOutlined,\r\n    QuestionOutlined,\r\n    WechatOutlined,\r\n    SettingOutlined,\r\n    NotificationOutlined\r\n} from '@ant-design/icons';\r\n\r\n// COOKIE\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nconst { SubMenu } = Menu\r\n\r\n\r\nconst DrawerMenu = () => {\r\n\r\n    const history = useHistory();\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <div className=\"drawer\">\r\n            <div className=\"drawer-logo\">\r\n                <img src=\"/assets/logo/logo-white.svg\" />\r\n            </div>\r\n            <nav>\r\n                <>\r\n                    {user && user.role === 'ADMINISTRADOR' ?\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={[history.location.pathname]}\r\n                            defaultOpenKeys={[history.location.pathname.split('/')[1]]}\r\n                            style={{ height: '100%', borderRight: 0 }}\r\n                        >\r\n                            <div className=\"menu-title\">\r\n                                <p>PANEL DE CONTROL</p>\r\n                            </div>\r\n                            <Menu.Item key=\"/\" icon={<AppstoreOutlined />}>\r\n                                Inicio\r\n                            </Menu.Item>\r\n\r\n                            <div className=\"menu-title\">\r\n                                <p>TRÁMITES</p>\r\n                            </div>\r\n\r\n                            <Menu.Item\r\n                                key=\"10\"\r\n                                icon={<SolutionOutlined />}\r\n                                onClick={() => history.push(\"/\")}>\r\n                                Mis trámites\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                key=\"/notary\"\r\n                                icon={<BankOutlined />}\r\n                                onClick={() => history.push(\"/notary\")}>\r\n                                Notarias\r\n                            </Menu.Item>\r\n\r\n\r\n                            <SubMenu\r\n                                key='notarial-act'\r\n                                icon={<ExceptionOutlined />}\r\n                                title=\"Actos Notariales\"\r\n                            >\r\n\r\n                                <Menu.Item\r\n                                    key=\"/notarial-act/view\"\r\n                                    onClick={() => history.push(\"/notarial-act/view\")}>\r\n                                    · Lista de Actos Notariales\r\n                                </Menu.Item>\r\n\r\n                                <SubMenu\r\n                                    key='seb-notarial-act'\r\n                                    icon={<ExceptionOutlined />}\r\n                                    title=\"Creación Acto Notarial\"\r\n                                >\r\n                                    <Menu.Item\r\n                                        key=\"/notarial-act/category\"\r\n                                        onClick={() => history.push(\"/notarial-act/category\")}>\r\n                                        1· Categorías\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                        key=\"/notarial-act/actor\"\r\n                                        onClick={() => history.push(\"/notarial-act/actor\")}>\r\n                                        2· Actores\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                        key=\"/notarial-act/input\"\r\n                                        onClick={() => history.push(\"/notarial-act/input\")}>\r\n                                        3· Campos Formularios\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                        key=\"/notarial-act/form\"\r\n                                        onClick={() => history.push(\"/notarial-act/form\")}>\r\n                                        4· Nuevo Acto Notarial\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/notarial-act/tutorial\">\r\n                                    <a href={Pdf} target=\"_blank\" />\r\n                                    ¿Necesitas ayuda?\r\n                                </Menu.Item>\r\n\r\n                            </SubMenu>\r\n\r\n\r\n                            <div className=\"menu-title\">\r\n                                <p>CONFIGURACIÓN</p>\r\n                            </div>\r\n\r\n                            <SubMenu\r\n                                key=\"website\"\r\n                                icon={<GlobalOutlined />}\r\n                                title=\"Web Site\"\r\n                            >\r\n                                <SubMenu\r\n                                    key='seb-question'\r\n                                    icon={<QuestionOutlined />}\r\n                                    title=\"Crear Pregunta\"\r\n                                >\r\n                                    <Menu.Item\r\n                                        key=\"/website/categoryquestion\"\r\n                                        onClick={() => history.push(\"/website/categoryquestion\")}\r\n                                    >\r\n                                        · Categorías Pregunta\r\n                                    </Menu.Item>\r\n\r\n                                    <Menu.Item\r\n                                        key=\"/website/subcategoryquestion\"\r\n                                        onClick={() => history.push(\"/website/subcategoryquestion\")}\r\n                                    >\r\n                                        · Subcategorías Pregunta\r\n                                    </Menu.Item>\r\n                                    <Menu.Item\r\n                                        key=\"/website/question\"\r\n                                        onClick={() => history.push(\"/website/question\")}\r\n                                    >\r\n                                        · Preguntas frecuentes\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/website/banner\"\r\n                                    onClick={() => history.push(\"/website/banner\")}\r\n                                >\r\n                                    · Banner\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/website/internationalization\"\r\n                                    onClick={() => history.push(\"/website/internationalization\")}\r\n                                >\r\n                                    · Internacionalización\r\n                                </Menu.Item>\r\n\r\n\r\n\r\n                                <Menu.Item\r\n                                    key=\"/website/page\"\r\n                                    onClick={() => history.push(\"/website/page\")}\r\n                                >\r\n                                    · Politicas y tratamiento de datos\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/website/contact\"\r\n                                    onClick={() => history.push(\"/website/contact\")}\r\n                                >\r\n                                    · Solicitudes de contacto\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/website/comment\"\r\n                                    onClick={() => history.push(\"/website/comment\")}\r\n                                >\r\n                                    · Comentarios\r\n                                </Menu.Item>\r\n\r\n\r\n                            </SubMenu>\r\n\r\n                            <Menu.Item\r\n                                key=\"/user\"\r\n                                icon={<TeamOutlined />}\r\n                                onClick={() => history.push(\"/user\")}>\r\n                                Usuarios\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                key=\"/chatbot\"\r\n                                icon={<WechatOutlined />}\r\n                                onClick={() => history.push(\"/chatbot\")}>\r\n                                Chatbot\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                key=\"/aditional-config\"\r\n                                icon={<SettingOutlined />}\r\n                                onClick={() => history.push(\"/aditional-config\")}>\r\n                                Configuración adicional\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item\r\n                                key=\"/notification\"\r\n                                icon={<NotificationOutlined />}\r\n                                onClick={() => history.push(\"/notification\")}>\r\n                                Notificaciones\r\n                            </Menu.Item>\r\n\r\n                            <div className=\"menu-title\">\r\n                                <p>SOPORTE</p>\r\n                            </div>\r\n\r\n                            <SubMenu\r\n                                key=\"support\"\r\n                                icon={<WhatsAppOutlined />}\r\n                                title=\"Soporte\"\r\n                            >\r\n\r\n                                <Menu.Item\r\n                                    key=\"/support/callme\"\r\n                                    onClick={() => history.push(\"/support/callme\")}\r\n                                >\r\n                                    · Solicitudes de llamada\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/support/chat\"\r\n                                    onClick={() => history.push(\"/support/chat\")}\r\n                                >\r\n                                    · Solicitudes de chat\r\n                                </Menu.Item>\r\n\r\n\r\n                            </SubMenu>\r\n\r\n                        </Menu>\r\n                        :\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={[history.location.pathname]}\r\n                            defaultOpenKeys={[history.location.pathname.split('/')[1]]}\r\n                            style={{ height: '100%', borderRight: 0 }}\r\n                        >\r\n                            <div className=\"menu-title\">\r\n                                <p>SOPORTE</p>\r\n                            </div>\r\n\r\n                            <SubMenu\r\n                                key=\"support\"\r\n                                icon={<WhatsAppOutlined />}\r\n                                title=\"Soporte\"\r\n                            >\r\n                                <Menu.Item\r\n                                    key=\"/website/comment\"\r\n                                    onClick={() => history.push(\"/website/comment\")}\r\n                                >\r\n                                    · Comentarios\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/support/callme\"\r\n                                    onClick={() => history.push(\"/support/callme\")}\r\n                                >\r\n                                    · Solicitudes de llamada\r\n                                </Menu.Item>\r\n\r\n                                <Menu.Item\r\n                                    key=\"/support/chat\"\r\n                                    onClick={() => history.push(\"/support/chat\")}\r\n                                >\r\n                                    · Solicitudes de chat\r\n                                </Menu.Item>\r\n\r\n\r\n                            </SubMenu>\r\n\r\n                        </Menu>\r\n                    }\r\n\r\n\r\n\r\n\r\n                </>\r\n            </nav>\r\n        </div>\r\n\r\n        //     <div className=\"drawer\">\r\n        //         <div className=\"drawer-logo\">\r\n        //             <img src=\"/assets/logo/logo-white.svg\" />\r\n        //         </div>\r\n        //         <nav>\r\n        //             <ul>\r\n        //                 {/*<li className=\"active\">\r\n        //                     <a href=\"/\">\r\n        //                         <img src=\"/assets/icon/home.svg\" />\r\n        //                         Inicio\r\n        //                     </a>\r\n        // </li>*/}\r\n        //                 <li className=\"active\">\r\n        //                     <a href=\"/actor\">\r\n        //                         <TeamOutlined />\r\n        //                         Actores\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li >\r\n        //                     <a href=\"/category\">\r\n        //                         <AppstoreOutlined />\r\n        //                         Categorías\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/categoryquestion\">\r\n        //                         <AppstoreOutlined />\r\n        //                         Categorías Pregunta\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/internationalization\">\r\n        //                         <ZhihuOutlined />\r\n        //                         Internacionalización\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/notary\">\r\n        //                         <BankOutlined />\r\n        //                         Notarias\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/stateNotarial\">\r\n        //                         <FileProtectOutlined />\r\n        //                         Estado Trámites\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/subcategoryquestion\">\r\n        //                         <FileUnknownOutlined />\r\n        //                         Subcategorías Pregunta\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li >\r\n        //                     <a href=\"/user\">\r\n        //                         <UserOutlined />\r\n        //                         Usuarios\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/question\">\r\n        //                         <QuestionCircleOutlined />\r\n        //                         Preguntas frecuentes\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/page\">\r\n        //                         <ProfileOutlined />\r\n        //                         Politicas y tratamiento de datos\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/contact\">\r\n        //                         <IdcardOutlined />\r\n        //                         Solicitudes de contacto\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 {/*<li>\r\n        //                     <a>\r\n        //                         <SolutionOutlined />\r\n        //                         Mis trámites\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a>\r\n        //                         <CommentOutlined />\r\n        //                         Mensajes\r\n        //                     </a>\r\n        //                 </li>*/}\r\n        //                 <li>\r\n        //                     <a href=\"/notarialAct\">\r\n        //                         <FileDoneOutlined />\r\n        //                         Actos Notariales\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/banner\">\r\n        //                         <PictureOutlined/>\r\n        //                         Banner\r\n        //                     </a>\r\n        //                 </li>\r\n        //                 <li>\r\n        //                     <a href=\"/comment\">\r\n        //                         <CommentOutlined/>\r\n        //                         Comentarios\r\n        //                     </a>\r\n        //                 </li>\r\n        //             </ul>\r\n        //         </nav>\r\n        //     </div>\r\n    )\r\n}\r\n\r\nexport default DrawerMenu","import React from 'react'\r\nimport { Drawer } from 'antd'\r\n\r\nimport DrawerMenu from './DrawerMenu'\r\n\r\nconst DrawerMobile = ({ openDrawer, setOpenDrawer }) => {\r\n\r\n    const onClose = () => {\r\n        setOpenDrawer(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <Drawer\r\n            placement={'left'}\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={openDrawer}\r\n            key={'right'}\r\n        >\r\n            <DrawerMenu />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default DrawerMobile\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport DrawerMobile from './menu/DrawerMobile'\r\n\r\n// CONTEXT \r\nimport AuthContext from '../../../context/AuthContext';\r\n\r\n//COMPONENTS\r\nimport UserDialog from '../../../pages/user/components/UserDialog'\r\n\r\n// COOKIE\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nconst Header = () => {\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const [userDialog, setUserDialog] = useState();\r\n\r\n    const exitLogout = () => {\r\n\r\n        cookies.remove('token');\r\n        window.location.href = \"/login\";\r\n\r\n    }\r\n    const handleShowUser = () => {\r\n        setUserDialog({ user });\r\n    }\r\n\r\n    const callbackUser = () => {\r\n        setUserDialog(null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <UserDialog\r\n                user={user}\r\n                data={userDialog}\r\n                setData={callbackUser}\r\n                callback={callbackUser}\r\n            />\r\n            <DrawerMobile openDrawer={openDrawer} setOpenDrawer={setOpenDrawer} />\r\n            <header>\r\n                <div className=\"responsive-menu\">\r\n                    <img src=\"/assets/icon/menu.svg\" onClick={() => setOpenDrawer(true)} />\r\n                </div>\r\n\r\n                <ul>\r\n                    <li>\r\n                        <img src=\"/assets/icon/notification.svg\" />\r\n                    </li>\r\n                    <li>\r\n                        <img src=\"/assets/icon/settings.svg\" onClick={() => exitLogout()} />\r\n                    </li>\r\n                    <li>\r\n                        <img className=\"profile\" src=\"/assets/icon/user_3.svg\" onClick={() => handleShowUser()} />\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport Header from './components/Header'\r\nimport DrawerMenu from './components/menu/DrawerMenu'\r\nimport Loader from '../loader/Loader'\r\n\r\nconst Layout = ({ children, loader = false }) => {\r\n    return (\r\n        <>\r\n        { loader && (\r\n            <Loader type=\"loader\"/>\r\n        ) }\r\n\r\n        <div className=\"layout\">\r\n            <DrawerMenu />\r\n            <div className=\"layout-content\">\r\n                <Header />\r\n                <main>\r\n                    { children }\r\n                </main>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Space } from 'antd'\r\n\r\n// ICON\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons'\r\n\r\nconst ActionTable = ({ handleEdit, handleDelete }) => {\r\n    return (\r\n        <Space size=\"middle\">\r\n            {handleEdit ?\r\n                <a className=\"action-edit\" onClick={handleEdit}>\r\n                    <EditOutlined />\r\n                </a> : null}\r\n            {handleDelete ?\r\n\r\n                <a className=\"action-delete\" onClick={handleDelete}>\r\n                    <DeleteOutlined />\r\n                </a> : null}\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default ActionTable\r\n"],"sourceRoot":""}